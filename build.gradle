buildscript {
    ext {
        kotlinVersion = '1.1.2-2'
        springBootVersion = '1.5.3.RELEASE'
        dockerPluginVersion = '3.0.7'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
        classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
        classpath("com.bmuschko:gradle-docker-plugin:${dockerPluginVersion}")
    }
}

apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: 'org.springframework.boot'
apply plugin: 'com.bmuschko.docker-java-application'


import com.bmuschko.gradle.docker.tasks.image.DockerBuildImage
import com.bmuschko.gradle.docker.tasks.image.Dockerfile

version = '1.1.0'
sourceCompatibility = 1.8

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
ext {
    dockerImageName = 'grannath/pardonas-bot'
}

repositories {
    mavenCentral()
    jcenter()
    maven {
        url "https://jitpack.io"
    }
}


dependencies {
    compile("org.jetbrains.kotlin:kotlin-stdlib-jre8:${kotlinVersion}")
    compile("org.jetbrains.kotlin:kotlin-reflect:${kotlinVersion}")

    compile('org.springframework.boot:spring-boot-starter-web')

    compile('org.springframework.boot:spring-boot-starter-actuator')

    compile('com.github.austinv11:Discord4J:2.8.1')

    testCompile('org.springframework.boot:spring-boot-starter-test')
}


task createDockerfile(type: Dockerfile) {
    destFile = file("${project.buildDir}/docker/Dockerfile")

    from 'openjdk:8'
    volume("/tmp")
    environmentVariable("JAVA_OPTS", "-Xmx1024m")
    addFile("${jar.archiveName}", "app.jar")
    runCommand('sh -c \'touch /app.jar\'')
    entryPoint('sh', '-c', 'java $JAVA_OPTS -Djava.security.egd=file:/dev/./urandom -jar /app.jar')
}


task buildImage(type: DockerBuildImage) {
    dependsOn createDockerfile
    dependsOn build
    inputDir = createDockerfile.destFile.parentFile
    tag = "${project.dockerImageName}:${project.version}"

    doFirst {
        copy {
            from(jar.archivePath)
            into(inputDir)
        }
    }
}


task wrapper(type: Wrapper) {
    gradleVersion = '3.5'
    distributionType = Wrapper.DistributionType.ALL
}